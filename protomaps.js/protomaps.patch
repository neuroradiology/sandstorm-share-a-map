--- protomaps.js.orig	2023-01-26 21:38:08.488000000 -0500
+++ protomaps.js	2023-01-26 21:43:15.780000000 -0500
@@ -1,3 +1,12 @@
+// Until we get range headers in Sandstorm
+function sandstormRangeHack(url, rangeFirst, rangeLast) {
+  if (url.includes('?')) {
+    return url + '&rangeFirst=' + rangeFirst + '&rangeLast=' + rangeLast
+  } else {
+    return url + '?rangeFirst=' + rangeFirst + '&rangeLast=' + rangeLast
+  }
+}
+
 var protomaps = (() => {
   var __create = Object.create;
   var __defProp = Object.defineProperty;
@@ -2487,9 +2496,12 @@
           controller = new AbortController();
           signal = controller.signal;
         }
-        let resp = yield fetch(this.url, {
+        const rangeFirst = offset
+        const rangeLast = (offset + length - 1)
+        const rangeUrl = sandstormRangeHack(this.url, rangeFirst, rangeLast)
+        let resp = yield fetch(rangeUrl, {
           signal,
-          headers: { Range: "bytes=" + offset + "-" + (offset + length - 1) }
+          headers: { Range: "bytes=" + rangeFirst + "-" + rangeLast }
         });
         if (resp.status === 416 && offset === 0) {
           const content_range = resp.headers.get("Content-Range");
@@ -2497,9 +2509,12 @@
             throw Error("Missing content-length on 416 response");
           }
           const actual_length = +content_range.substr(8);
-          resp = yield fetch(this.url, {
+          const rangeFirst = 0
+          const rangeLast = (actual_length - 1)
+          const rangeUrl = sandstormRangeHack(this.url, rangeFirst, rangeLast)
+          resp = yield fetch(rangeUrl, {
             signal,
-            headers: { Range: "bytes=0-" + (actual_length - 1) }
+            headers: { Range: "bytes=" + rangeFirst + "-" + rangeLast }
           });
         }
         if (resp.status >= 300) {
